class Alumno:
    facultad = "Fes Aragon"
#constructor
    """def __init__(self):
       self.nombre = "juan"
       self.edad = 20
       self.carrera = "ICO" """

#constructor sobre cargado


    def __init__(self, nom, ed, carr):
                self.__nombre = nom
                self.__edad = ed
                self.__carrera = carr

    def set_nombre(self, nom):
        self.__nombre = nom
    def get_nombre(self):
        return self.__nombre

    def set_edad(self, ed):
        if ed >= 8 and ed < 120:
            self.__edad = ed
        else:
            print("Esa edad no es correcta")
            self.__edad = 0

    def get_edad(self):
        return self.__edad

    def set_carrera(self, carr):
        self.__carrera = carr


    def get_carrera(self):
        return self.__carrera

    def __str__(self):
        cadena = "----------\n Nombre: " + self.__nombre
        cadena = cadena + "\n Edad:" + str(self.__carrera)
        cadena = cadena + "\n Carrea: " + self.__carrera
        cadena = cadena + "\n -------------"
        return cadena

    def estudiar(self, horas=1):
        print(f"El alumno {self.__nombre} esta estudiando por {horas} horas")

class Perro:
    reino = "canino"

    def __init__(self, raza, edad, estatura):
        self.__raza = raza
        self.__edad = edad
        self.__estatura = estatura
    #Metodo property
        @property
        def raza(self):
            return self.__raza
    #metodo de acceso set
        @raza.setter
        def raza(self, la_raza):
            self.__raza = la_raza
        @property
        def edad(self):
            return self.__edad
        @edad.setter
        def edad(self, la_edad):
            if la_edad > 0 and la_edad < 28:
                self.__edad = la_edad
            else:
                print("Esa no es una edad valida")
                self.__edad = 0

        @property
        def estatura(self):
            return self.__estatura

        @estatura.setter
        def estatura(self, la_estatura):
            if la_estatura > 0.1 and la_estatura < 1.1:
                self.__ = la_estatura
            else:
                print("No Way")
                self.__estatura = 0.1

        def __str__(self):
            return f"""
            
            Raza: {self.__raza}
            Edad: {self.__edad}
            Estatura: {self.estatura}
            """
        @staticmethod
        def es_cachorro(edad):
            return edad < 3

        @staticmethod
        def dormir(veces = 5):
            for n in range(veces):
                print(f"Dando vuelta {n + 1}")
            print("zzzzzzz!")

        @staticmethod
        def perro_grande(cls, est):
            if est > 0.79:
                return cls("",0, est)
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
from cosas import Alumno, Perro
def main():
   al1 = Alumno("jose", 19, "ICO")
   print(vars(al1))
   al1.__nombre = "Diego"
   print(vars(al1))
   al1.set_nombre("Maria")
   print(vars(al1))
   print("-----To string----")
   print(al1)
   al1.set_edad(999)
   print(al1)
   al1.estudiar(4)
   print("----PERRO----")
   perro1 = Perro("Poodle", 2, 0.35)
   print(vars(perro1))
   perro1_raza = "De la calle" #set en notacion Pythonic
   print(vars(perro1))
   perro1.__raza = "otra"
   print(vars(perro1))
   print(vars(perro1))
   perro1.edad = 12
   perro1.estatura = 0.42
   print(perro1)
   cachorro = Perro.es_cachorro(perro1.edad)
   print(cachorro)
   perro2 =Perro()
   Perro.dormir()

main()





